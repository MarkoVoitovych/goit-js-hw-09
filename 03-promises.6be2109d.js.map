{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,UAEa,CACXC,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,G,kBAUlB,IAAMC,EAAeC,OAAOC,GAASC,EAAIC,EACzCC,YAAW,WAYf,IAAuBC,EAAUC,EACzBC,GADeF,EAXHH,EAWaI,EAXVP,EAYfQ,EAAgBC,KAAKC,SAAW,GAC/B,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,KAhBhBO,MAAK,SAAAC,IA+Bd,SAAuBT,EAAUC,GAC/Bd,EAAAuB,OAAOC,QAAQ,uBAAsCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,MAAK,CAC9DY,QAAS,IACTC,cAAc,EACdC,cAAc,EACdC,oBAAoB,G,CAnCdC,CADeR,EAART,SAAeS,EAALR,M,IAGlBiB,OAAM,SAAAT,IAmBf,SAAuBT,EAAUC,GAC/Bd,EAAAuB,OAAOS,QAAQ,sBAAuCP,OAAfZ,EAAS,QAAYY,OAANX,EAAM,MAAK,CAC7DY,QAAO,IACTC,cAAc,EACdC,cAAc,EACdC,oBAAoB,G,CAvBdI,CADgBX,EAART,SAAeS,EAALR,M,MAGrBP,E,EAlBLD,EAAE4B,iBAQF,IANA,IAIIC,EAAA7B,EAAE8B,cAAcC,SAHT5B,EAGP0B,EAHFrB,MAASwB,MACD3B,EAENwB,EAFFxB,KAAQ2B,MACEC,EACRJ,EADFI,OAAUD,MAGHE,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    delay: { value: delay },\n    step: { value: step },\n    amount: { value: amount }\n  } = e.currentTarget.elements;\n\n  for (let i = 1; i <= amount; i += 1) {\n    const currentDelay = Number(delay) + i * step;\n    setTimeout(() => {\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          notifySuccess(position, delay);\n        })\n        .catch(({ position, delay }) => {\n          notifyFailure(position, delay);\n        });\n    }, currentDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n\n}\n\nfunction notifyFailure(position, delay) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    timeout: 4000,\n    clickToClose: true,\n    pauseOnHover: false,\n    showOnlyTheLastOne: false,\n  });\n}\n\nfunction notifySuccess(position, delay) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    timeout: 4000,\n    clickToClose: true,\n    pauseOnHover: false,\n    showOnlyTheLastOne: false,\n  });\n}"],"names":["$h6c0i","parcelRequire","form","document","querySelector","addEventListener","e","currentDelay","Number","delay1","i","step","setTimeout","position","delay","shouldResolve","Math","random","Promise","resolve","reject","then","param","Notify","success","concat","timeout","clickToClose","pauseOnHover","showOnlyTheLastOne","$ce04d3a99e08e73b$var$notifySuccess","catch","failure","$ce04d3a99e08e73b$var$notifyFailure","preventDefault","_elements","currentTarget","elements","value","amount","i1","_loop"],"version":3,"file":"03-promises.6be2109d.js.map"}