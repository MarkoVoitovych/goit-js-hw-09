{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SA+BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACvBL,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,G,CAMjC,SAASO,EAAcR,EAAUC,GAC/BJ,EAAAY,OAAOC,QAAQ,sBAAoBV,QAAiBC,MAAW,CAC3DU,QAAO,IACTC,cAAc,EACdC,cAAc,EACdC,oBAAoB,G,CAIxB,SAASC,EAAcf,EAAUC,GAC/BJ,EAAAY,OAAOO,QAAQ,uBAAqBhB,QAAeC,MAAW,CAC5DU,QAAS,IACTC,cAAc,EACdC,cAAc,EACdC,oBAAoB,G,EAvDX,CACXG,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAE3B,SAAsBC,GACpBA,EAAEC,iBAEF,MACErB,OAASsB,MAAOC,GAChBC,MAAQF,MAAOE,GACfC,QAAUH,MAAOG,IACfL,EAAEM,cAAcC,SAEpB,IAAK,IAAIC,EAAI,EAAGA,GAAKH,EAAQG,GAAK,EAAG,CACnC,MAAMC,EAAeC,OAAOP,GAASK,EAAIJ,EACzCO,YAAW,KACTjC,EAAc8B,EAAGC,GACdG,MAAK,EAACjC,SAAEA,EAAQC,MAAEA,MACjBc,EAAcf,EAAUC,EAAM,IAE/BiC,OAAM,EAAClC,SAAEA,EAAQC,MAAEA,MAClBO,EAAcR,EAAUC,EAAM,GAC9B,GACH6B,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(e) {\n  e.preventDefault();\n\n  const {\n    delay: { value: delay },\n    step: { value: step },\n    amount: { value: amount }\n  } = e.currentTarget.elements;\n\n  for (let i = 1; i <= amount; i += 1) {\n    const currentDelay = Number(delay) + i * step;\n    setTimeout(() => {\n      createPromise(i, currentDelay)\n        .then(({ position, delay }) => {\n          notifySuccess(position, delay);\n        })\n        .catch(({ position, delay }) => {\n          notifyFailure(position, delay);\n        });\n    }, currentDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n  });\n\n}\n\nfunction notifyFailure(position, delay) {\n  Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, {\n    timeout: 4000,\n    clickToClose: true,\n    pauseOnHover: false,\n    showOnlyTheLastOne: false,\n  });\n}\n\nfunction notifySuccess(position, delay) {\n  Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, {\n    timeout: 4000,\n    clickToClose: true,\n    pauseOnHover: false,\n    showOnlyTheLastOne: false,\n  });\n}"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","$47d4ff9957288465$var$notifyFailure","Notify","failure","timeout","clickToClose","pauseOnHover","showOnlyTheLastOne","$47d4ff9957288465$var$notifySuccess","success","form","document","querySelector","addEventListener","e","preventDefault","value","delay1","step","amount","currentTarget","elements","i","currentDelay","Number","setTimeout","then","catch"],"version":3,"file":"03-promises.24454c37.js.map"}